{"version":3,"sources":["Components/Card/Card.js","Components/Form/Form.js","redux/Thunk/ThuncTest.js","redux/action/ActionCreator.js","redux/action/ActionType.js","Components/App/App.js","redux/reducer/testReducer.js","redux/reducer/rootreducer.js","redux/store.js","index.js"],"names":["Card","el","cash","className","blockNumber","href","target","hash","from","length","slice","to","Form","useState","forms","setForms","numbers","setNumber","errorAdd","setErrorAdd","errorNumber","setErrorNumber","dispatch","useDispatch","store","useSelector","allList","testReducer","list","eth","toFixed","time","setTime","spiner","setSpiner","setTimeout","formHandler","e","preventDefault","form","number","value","test","reset","useEffect","console","log","fetch","then","res","json","data","type","payload","result","catch","error","ThunkAllCArd","onSubmit","name","placeholder","defaultValue","undefined","map","App","initalState","todoReducer","state","action","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc824ba9.chunk.js","sourcesContent":["import React from 'react';\n\n\nimport './Card.scss'\n\nfunction Card({el, cash}) {\n \n\n    return (\n         <div className=\"cardS__box\">\n            <div className=\"cardS__header\">\n                <div className=\"cardS__TransithionHash\">Transaction Hash</div>\n                <div className=\"cardS__blockNumber\"> {el.blockNumber} Block</div>\n            </div>\n            <div className=\"cardS__body\">\n                <a className=\"cardS__hash\" href=\"https://docs.etherscan.io/api-endpoints/accounts#get-ether-balance-for-a-single-address\" target=\"_blank\" >{el.hash}</a>\n            </div>\n            <div className=\"cardS__footer\">\n                <div className=\"cardS__from\">\n                    <p>From</p>\n                   {el.from.length>20 && <p  className=\"cardS__from-number\" >{el.from.slice(0,8)}...{el.from.slice(-8)}</p>}\n                   {el.from.length<20 && <p  className=\"cardS__from-number\" >{el.from}</p>}\n                </div>\n                <div className=\"cardS__to\">\n                    <p>To</p>\n                    <p  className=\"cardS__from-number\" >{el.to.slice(0,8)}...{el.to.slice(-8)}</p>\n                </div>\n                <div className=\"cardS__cash\">\n                    <span>{cash}</span> ETH\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React,{useState,useEffect,useCallback} from 'react';\nimport './form.scss'\nimport Card from '../Card/Card'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {ThunkAllCArd} from '../../redux/Thunk/ThuncTest'\n\nfunction Form() {\n    const[forms,setForms] = useState(true)\n    const[numbers,setNumber] = useState()\n    const[errorAdd, setErrorAdd] = useState()\n    const[errorNumber, setErrorNumber] = useState(false)\n\n    const dispatch = useDispatch()\n    const store = useSelector(store=>store)\n    const allList = store.testReducer.list\n    const cash = store.testReducer.cash[0]\n    const eth = (cash/10**18).toFixed(1)\n    \n    \n    const [time,setTime] = useState(false)\n    const [spiner, setSpiner] = useState(true)\n    setTimeout(()=>{\n        setTime(true)\n        setSpiner(false)\n    },5000)\n    \n     const formHandler =(e)=>{\n        e.preventDefault()\n        const form = e.target        \n        const{number:{value:number}} = e.target\n        \n\n        \n        let num = /0x+[A-Za-z0-9]{40}/\n        if(time && (!(num.test(number)))){\n            setErrorNumber(true)\n            setForms(false)\n            setErrorAdd(number)\n            \n\n        }else if(time){\n            setErrorNumber(false)\n            setNumber(number)\n            setForms(true)\n            \n        \n        }\n\n        if(numbers || errorNumber) {\n            form.reset()\n            setErrorNumber(false)\n            setForms(true)\n            setNumber(false)\n        }\n    }\n    \n  useEffect(()=>{    \n    numbers && dispatch(ThunkAllCArd(numbers))   \n  },[numbers])   \n\n    return (<>\n            {spiner && <div className=\"spiner\">\n                <div className=\"spiner-box\">                \n                    <div className=\"spinner-grow text-muted\"></div>\n                    <div className=\"spinner-grow text-primary\"></div>\n                    <div className=\"spinner-grow text-success\"></div>\n                    <div className=\"spinner-grow text-info\"></div>\n                    <div className=\"spinner-grow text-warning\"></div>\n                    <div className=\"spinner-grow text-danger\"></div>\n                    <div className=\"spinner-grow text-secondary\"></div>\n                    <div className=\"spinner-grow text-dark\"></div>\n                    <div className=\"spinner-grow text-light\"></div>\n                </div>\n                </div>}\n           {forms && !spiner &&\n            <form className=\"form\" onSubmit={formHandler}>\n                <input \n                    name=\"number\" \n                    type=\"text\" \n                    className=\"form__inputText\" \n                    placeholder=\"Enter the wallet address\"\n                    defaultValue={numbers ===undefined || numbers ===false ?'' : numbers }                 \n                />\n                {!numbers ? <button className=\"form__btn\" type=\"submit\" >search</button>: <button className=\"form__btn form__btn-clear\" type=\"submit\" >clear</button> }\n            </form>\n            } \n            {errorNumber && !spiner &&\n                <form className=\"form\" onSubmit={formHandler}>\n                    <div className=\"form__error-container\">\n                        <input \n                            name=\"number\" \n                            type=\"text\" \n                            className=\"form__inputText form__inputError\" \n                            placeholder=\"Enter the wallet address\" \n                            defaultValue={errorAdd ===undefined || errorAdd===false? '': errorAdd}  \n                                          \n                        />\n                        <div className=\"form__inputError-text\">\n                            <p>The wrong wallet address format </p>\n                        </div>\n                    </div>\n                    <button className=\"form__btn form__btn-clear form__error-btn\" type=\"submit\" >clear</button>\n                </form>\n            }         \n       \n        <div className=\"cardS\"> \n            { allList[0]?.length>1 &&  allList[0]?.slice(0,5).map((el)=> <Card key={el.hash}  el={el} cash={eth} /> )} \n        </div>\n    </>\n    );\n\n}\n\nexport default Form;","import{addCashAC,addAllAC} from '../action/ActionCreator'\n\nexport const ThunkAddCash = ()=>{\n return(dispatch)=>{\n    \n        fetch(\n            `https://api.etherscan.io/api?module=account&action=balance&address=0xddbd2b932c763ba5b1b7ae3b362eac3e8d40121a&tag=latest&apikey=YourApiKeyToken`\n            )\n            .then(res=>res.json())\n            .then(data=>dispatch(addCashAC(data.result)))\n            .catch(error=>console.log(error)\n        ) \n    }\n}\n\nexport const ThunkAllCArd = (numbers)=>{\n    console.log(\"numbers\",numbers);\n    return(dispatch)=>{\n          \n           fetch(\n        `https://api.etherscan.io/api?module=account&action=txlist&address=${numbers}&startblock=0&endblock=99999999&page=1&offset=10&sort=asc&apikey=YourApiKeyToken`\n        )\n        .then(res=>res.json())\n        // .then(data=>console.log(data))\n        .then(data=>dispatch(addAllAC(data.result)))\n        .catch(error=>console.log(error))  \n       }\n   }","import {ADDCASH,ADDAllAC} from './ActionType'\n\nexport const addCashAC = (payload)=>{\n return {\n    type: ADDCASH,\n    payload\n  }\n}\nexport const addAllAC = (payload)=>{\n    return {\n       type: ADDAllAC,\n       payload\n     }\n}","export const ADDCASH = 'ADDCASH'\nexport const ADDAllAC = 'ADDAllAC'\n","import React,{useEffect} from 'react';\nimport './App.scss';\nimport Form from '../Form/Form'\nimport {useDispatch} from 'react-redux'\nimport {ThunkAddCash} from '../../redux/Thunk/ThuncTest'\n\nfunction App() {\n  \n  const dispatch = useDispatch()\n  useEffect(()=>{  \n    dispatch(ThunkAddCash())   \n  },[dispatch])\n  \n\n\n  return (\n    \n    <div className=\"App\">\n      <div className=\"container\">\n        <Form/>\n      </div>    \n    </div>\n  );\n}\n\nexport default App;\n","const initalState = {\n    cash:[],\n    list:[]\n}\n\nconst todoReducer = (state = initalState, action) => {\n    \n    switch (action.type) {\n        case \"ADDCASH\":\n        return {\n            ...state,\n            cash: [...state.cash, action.payload],\n        };\n        \n        case \"ADDAllAC\":\n        return {\n            ...state,\n            list: [...state.list, action.payload],\n        };\n\n\n\n\n        default:\n        return state;\n    };  \n        \n    };\n\n    export default todoReducer;","import {combineReducers} from 'redux'\n\n\nimport testReducer from './testReducer'\n\nconst rootReducer = combineReducers({\n testReducer\n})\n\nexport default rootReducer","import {createStore, applyMiddleware} from 'redux'\n\nimport rootReducer from './reducer/rootreducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))\n\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}